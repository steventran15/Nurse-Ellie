// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Edit User renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#42C86A",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "rgba(62, 185, 99, 0.8)",
          "borderRadius": 250,
          "height": 500,
          "position": "absolute",
          "right": -375,
          "top": 667,
          "width": 500,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.3)",
          "borderRadius": 30,
          "height": 60,
          "left": 10,
          "position": "absolute",
          "top": 30,
          "width": 60,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.3)",
          "borderRadius": 125,
          "height": 250,
          "left": 150,
          "position": "absolute",
          "top": 222.33333333333334,
          "width": 250,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.3)",
          "borderRadius": 300,
          "height": 600,
          "left": 300,
          "position": "absolute",
          "top": -333.5,
          "width": 600,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.3)",
          "borderRadius": 175,
          "height": 350,
          "left": -250,
          "position": "absolute",
          "top": 667,
          "width": 350,
        }
      }
    />
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
        "position": "absolute",
        "right": 30,
        "top": 40,
      }
    }
  >
    <svg
      data-file-name="SvgMenuIcon"
    />
  </View>
  <View
    forwardedRef={[Function]}
    style={
      Object {
        "backgroundColor": "#fff",
        "borderTopLeftRadius": 30,
        "borderTopRightRadius": 30,
        "flex": 4,
        "height": 1133.8999999999999,
        "opacity": 0,
        "paddingHorizontal": 30,
        "paddingVertical": 50,
        "position": "absolute",
        "top": 200.1,
        "transform": Array [
          Object {
            "translateY": 500,
          },
        ],
        "width": 750,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "marginBottom": 133.4,
        }
      }
    >
      <svg
        data-file-name="SvgNurseEllieLogo"
        height={75}
        style={
          Object {
            "flex": 1,
            "marginRight": "5%",
          }
        }
      />
      <Text
        style={
          Object {
            "fontFamily": "roboto-regular",
            "fontSize": 25,
            "paddingRight": 30,
          }
        }
      >
         
        Edit User Profile
      </Text>
    </View>
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      onChangeText={[Function]}
      onSubmitEditing={[Function]}
      placeholder="Full Name"
      rejectResponderTermination={true}
      returnKeyType="done"
      style={
        Object {
          "borderBottomColor": "rgba(112, 112, 112, 0.7)",
          "borderBottomWidth": 1.5,
          "fontSize": 16,
          "paddingTop": 8,
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      onChangeText={[Function]}
      onSubmitEditing={[Function]}
      placeholder="New email"
      rejectResponderTermination={true}
      returnKeyType="done"
      style={
        Object {
          "borderBottomColor": "rgba(112, 112, 112, 0.7)",
          "borderBottomWidth": 1.5,
          "fontSize": 16,
          "paddingTop": 8,
        }
      }
      typep="email"
      underlineColorAndroid="transparent"
      value=""
    />
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 0,
          "paddingVertical": 0,
        }
      }
    >
      <Text
        style={
          Object {
            "alignContent": "flex-start",
            "color": "black",
            "fontSize": 16,
            "paddingLeft": 0,
          }
        }
      >
        Date of Birth:
      </Text>
      <Text
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "color": "#707070",
              "fontFamily": "roboto-regular",
              "fontSize": 14,
            },
            false,
          ]
        }
      >
        August 21st, 2020
      </Text>
      <View />
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 0,
          "paddingVertical": 0,
        }
      }
    >
      <Text
        style={
          Object {
            "alignContent": "flex-start",
            "color": "black",
            "fontSize": 16,
            "paddingLeft": 0,
          }
        }
      >
        Gender:
      </Text>
      <View
        style={
          Object {
            "paddingRight": 150,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignSelf": "stretch",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="ios_touchable_wrapper"
          >
            <View
              pointerEvents="box-only"
            >
              <TextInput
                allowFontScaling={true}
                editable={false}
                rejectResponderTermination={true}
                style={
                  Array [
                    undefined,
                    Object {
                      "color": "#c7c7cd",
                    },
                  ]
                }
                testID="text_input"
                underlineColorAndroid="transparent"
                value="Select your gender..."
              />
            </View>
          </View>
          <Modal
            hardwareAccelerated={false}
            onOrientationChange={[Function]}
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            testID="ios_modal"
            transparent={true}
            visible={false}
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flex": 1,
                  "opacity": 1,
                }
              }
              testID="ios_modal_top"
            />
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#f8f8f8",
                    "borderTopColor": "#dedede",
                    "borderTopWidth": 1,
                    "flexDirection": "row",
                    "height": 45,
                    "justifyContent": "space-between",
                    "paddingHorizontal": 10,
                    "zIndex": 2,
                  },
                  undefined,
                ]
              }
              testID="input_accessory_view"
            >
              <View
                style={
                  Array [
                    Object {
                      "flexDirection": "row",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#a1a1a1",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 11,
                          "transform": Array [
                            Object {
                              "translateY": 4,
                            },
                            Object {
                              "rotate": "-45deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#a1a1a1",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 22,
                          "transform": Array [
                            Object {
                              "translateY": -5,
                            },
                            Object {
                              "rotate": "135deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
              </View>
              <View
                accessible={true}
                focusable={true}
                hitSlop={
                  Object {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="done_button"
              >
                <View
                  testID="needed_for_touchable"
                >
                  <Text
                    allowFontScaling={false}
                    style={
                      Array [
                        Object {
                          "color": "#007aff",
                          "fontSize": 17,
                          "fontWeight": "600",
                          "paddingRight": 11,
                          "paddingTop": 1,
                        },
                        undefined,
                        Object {},
                      ]
                    }
                    testID="done_text"
                  >
                    Done
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#d0d4da",
                    "justifyContent": "center",
                  },
                  Object {
                    "height": 215,
                  },
                  undefined,
                ]
              }
            >
              <View>
                <RNCPicker
                  items={
                    Array [
                      Object {
                        "label": "Select your gender...",
                        "textColor": 4288585892,
                        "value": null,
                      },
                      Object {
                        "label": "Men",
                        "textColor": undefined,
                        "value": "men",
                      },
                      Object {
                        "label": "Women",
                        "textColor": undefined,
                        "value": "women",
                      },
                      Object {
                        "label": "Others",
                        "textColor": undefined,
                        "value": "other",
                      },
                    ]
                  }
                  onChange={[Function]}
                  selectedIndex={0}
                  style={
                    Array [
                      Object {
                        "height": 216,
                      },
                      undefined,
                    ]
                  }
                  testID="ios_picker"
                />
              </View>
            </View>
          </Modal>
        </View>
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignSelf": "flex-start",
          "marginTop": 30,
          "opacity": 1,
        }
      }
    >
      <svg
        data-file-name="SvgGEntryArrowIcon"
      />
    </View>
    <View
      style={
        Object {
          "height": 166.75,
        }
      }
    />
  </View>
</View>
`;

exports[`EditUserProfileScreen renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#42C86A",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "rgba(62, 185, 99, 0.8)",
          "borderRadius": 250,
          "height": 500,
          "position": "absolute",
          "right": -375,
          "top": 667,
          "width": 500,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.3)",
          "borderRadius": 30,
          "height": 60,
          "left": 10,
          "position": "absolute",
          "top": 30,
          "width": 60,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.3)",
          "borderRadius": 125,
          "height": 250,
          "left": 150,
          "position": "absolute",
          "top": 222.33333333333334,
          "width": 250,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.3)",
          "borderRadius": 300,
          "height": 600,
          "left": 300,
          "position": "absolute",
          "top": -333.5,
          "width": 600,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.3)",
          "borderRadius": 175,
          "height": 350,
          "left": -250,
          "position": "absolute",
          "top": 667,
          "width": 350,
        }
      }
    />
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
        "position": "absolute",
        "right": 30,
        "top": 40,
      }
    }
  >
    <svg
      data-file-name="SvgMenuIcon"
    />
  </View>
  <View
    forwardedRef={[Function]}
    style={
      Object {
        "backgroundColor": "#fff",
        "borderTopLeftRadius": 30,
        "borderTopRightRadius": 30,
        "flex": 4,
        "height": 1133.8999999999999,
        "opacity": 0,
        "paddingHorizontal": 30,
        "paddingVertical": 50,
        "position": "absolute",
        "top": 200.1,
        "transform": Array [
          Object {
            "translateY": 500,
          },
        ],
        "width": 750,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "marginBottom": 133.4,
        }
      }
    >
      <svg
        data-file-name="SvgNurseEllieLogo"
        height={75}
        style={
          Object {
            "flex": 1,
            "marginRight": "5%",
          }
        }
      />
      <Text
        style={
          Object {
            "fontFamily": "roboto-regular",
            "fontSize": 25,
            "paddingRight": 30,
          }
        }
      >
         
        User Profile
      </Text>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <svg
          data-file-name="SvgEditIcon"
        />
      </View>
    </View>
    <View>
      <Text
        style={
          Object {
            "alignContent": "flex-start",
            "color": "black",
            "fontSize": 18,
            "paddingLeft": 0,
          }
        }
      >
        Full name: 
      </Text>
      <Text
        style={
          Object {
            "alignContent": "flex-start",
            "color": "black",
            "fontSize": 18,
            "paddingLeft": 0,
          }
        }
      >
        Email : 
      </Text>
      <Text
        style={
          Object {
            "alignContent": "flex-start",
            "color": "black",
            "fontSize": 18,
            "paddingLeft": 0,
          }
        }
      >
        Gender : 
      </Text>
      <Text
        style={
          Object {
            "alignContent": "flex-start",
            "color": "black",
            "fontSize": 18,
            "paddingLeft": 0,
          }
        }
      >
        Date Of Birth : 
      </Text>
    </View>
    <View
      style={
        Object {
          "height": 166.75,
        }
      }
    />
  </View>
</View>
`;

exports[`EditUserProfileScreenrenders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#42C86A",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "rgba(62, 185, 99, 0.8)",
          "borderRadius": 250,
          "height": 500,
          "position": "absolute",
          "right": -375,
          "top": 667,
          "width": 500,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.3)",
          "borderRadius": 30,
          "height": 60,
          "left": 10,
          "position": "absolute",
          "top": 30,
          "width": 60,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.3)",
          "borderRadius": 125,
          "height": 250,
          "left": 150,
          "position": "absolute",
          "top": 222.33333333333334,
          "width": 250,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.3)",
          "borderRadius": 300,
          "height": 600,
          "left": 300,
          "position": "absolute",
          "top": -333.5,
          "width": 600,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.3)",
          "borderRadius": 175,
          "height": 350,
          "left": -250,
          "position": "absolute",
          "top": 667,
          "width": 350,
        }
      }
    />
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
        "position": "absolute",
        "right": 30,
        "top": 40,
      }
    }
  >
    <svg
      data-file-name="SvgMenuIcon"
    />
  </View>
  <View
    forwardedRef={[Function]}
    style={
      Object {
        "backgroundColor": "#fff",
        "borderTopLeftRadius": 30,
        "borderTopRightRadius": 30,
        "flex": 4,
        "height": 1133.8999999999999,
        "opacity": 0,
        "paddingHorizontal": 30,
        "paddingVertical": 50,
        "position": "absolute",
        "top": 200.1,
        "transform": Array [
          Object {
            "translateY": 500,
          },
        ],
        "width": 750,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "marginBottom": 133.4,
        }
      }
    >
      <svg
        data-file-name="SvgNurseEllieLogo"
        height={75}
        style={
          Object {
            "flex": 1,
            "marginRight": "5%",
          }
        }
      />
      <Text
        style={
          Object {
            "fontFamily": "roboto-regular",
            "fontSize": 25,
            "paddingRight": 30,
          }
        }
      >
         
        User Profile
      </Text>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <svg
          data-file-name="SvgEditIcon"
        />
      </View>
    </View>
    <View>
      <Text
        style={
          Object {
            "alignContent": "flex-start",
            "color": "black",
            "fontSize": 18,
            "paddingLeft": 0,
          }
        }
      >
        Full name: 
      </Text>
      <Text
        style={
          Object {
            "alignContent": "flex-start",
            "color": "black",
            "fontSize": 18,
            "paddingLeft": 0,
          }
        }
      >
        Email : 
      </Text>
      <Text
        style={
          Object {
            "alignContent": "flex-start",
            "color": "black",
            "fontSize": 18,
            "paddingLeft": 0,
          }
        }
      >
        Gender : 
      </Text>
      <Text
        style={
          Object {
            "alignContent": "flex-start",
            "color": "black",
            "fontSize": 18,
            "paddingLeft": 0,
          }
        }
      >
        Date Of Birth : 
      </Text>
    </View>
    <View
      style={
        Object {
          "height": 166.75,
        }
      }
    />
  </View>
</View>
`;

exports[`User Profile component renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#42C86A",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "rgba(62, 185, 99, 0.8)",
          "borderRadius": 250,
          "height": 500,
          "position": "absolute",
          "right": -375,
          "top": 667,
          "width": 500,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.3)",
          "borderRadius": 30,
          "height": 60,
          "left": 10,
          "position": "absolute",
          "top": 30,
          "width": 60,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.3)",
          "borderRadius": 125,
          "height": 250,
          "left": 150,
          "position": "absolute",
          "top": 222.33333333333334,
          "width": 250,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.3)",
          "borderRadius": 300,
          "height": 600,
          "left": 300,
          "position": "absolute",
          "top": -333.5,
          "width": 600,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.3)",
          "borderRadius": 175,
          "height": 350,
          "left": -250,
          "position": "absolute",
          "top": 667,
          "width": 350,
        }
      }
    />
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
        "position": "absolute",
        "right": 30,
        "top": 40,
      }
    }
  >
    <svg
      data-file-name="SvgMenuIcon"
    />
  </View>
  <View
    forwardedRef={[Function]}
    style={
      Object {
        "backgroundColor": "#fff",
        "borderTopLeftRadius": 30,
        "borderTopRightRadius": 30,
        "flex": 4,
        "height": 1133.8999999999999,
        "opacity": 0,
        "paddingHorizontal": 30,
        "paddingVertical": 50,
        "position": "absolute",
        "top": 200.1,
        "transform": Array [
          Object {
            "translateY": 500,
          },
        ],
        "width": 750,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "marginBottom": 133.4,
        }
      }
    >
      <svg
        data-file-name="SvgNurseEllieLogo"
        height={75}
        style={
          Object {
            "flex": 1,
            "marginRight": "5%",
          }
        }
      />
      <Text
        style={
          Object {
            "fontFamily": "roboto-regular",
            "fontSize": 25,
            "paddingRight": 30,
          }
        }
      >
         
        Edit User Profile
      </Text>
    </View>
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      onChangeText={[Function]}
      onSubmitEditing={[Function]}
      placeholder="Full Name"
      rejectResponderTermination={true}
      returnKeyType="done"
      style={
        Object {
          "borderBottomColor": "rgba(112, 112, 112, 0.7)",
          "borderBottomWidth": 1.5,
          "fontSize": 16,
          "paddingTop": 8,
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      onChangeText={[Function]}
      onSubmitEditing={[Function]}
      placeholder="New email"
      rejectResponderTermination={true}
      returnKeyType="done"
      style={
        Object {
          "borderBottomColor": "rgba(112, 112, 112, 0.7)",
          "borderBottomWidth": 1.5,
          "fontSize": 16,
          "paddingTop": 8,
        }
      }
      typep="email"
      underlineColorAndroid="transparent"
      value=""
    />
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 0,
          "paddingVertical": 0,
        }
      }
    >
      <Text
        style={
          Object {
            "alignContent": "flex-start",
            "color": "black",
            "fontSize": 16,
            "paddingLeft": 0,
          }
        }
      >
        Date of Birth:
      </Text>
      <Text
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "color": "#707070",
              "fontFamily": "roboto-regular",
              "fontSize": 14,
            },
            Object {
              "color": "#707070",
            },
          ]
        }
      >
        Select Date
      </Text>
      <View />
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 0,
          "paddingVertical": 0,
        }
      }
    >
      <Text
        style={
          Object {
            "alignContent": "flex-start",
            "color": "black",
            "fontSize": 16,
            "paddingLeft": 0,
          }
        }
      >
        Gender:
      </Text>
      <View
        style={
          Object {
            "paddingRight": 150,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignSelf": "stretch",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="ios_touchable_wrapper"
          >
            <View
              pointerEvents="box-only"
            >
              <TextInput
                allowFontScaling={true}
                editable={false}
                rejectResponderTermination={true}
                style={
                  Array [
                    undefined,
                    Object {
                      "color": "#c7c7cd",
                    },
                  ]
                }
                testID="text_input"
                underlineColorAndroid="transparent"
                value="Select your gender..."
              />
            </View>
          </View>
          <Modal
            hardwareAccelerated={false}
            onOrientationChange={[Function]}
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            testID="ios_modal"
            transparent={true}
            visible={false}
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flex": 1,
                  "opacity": 1,
                }
              }
              testID="ios_modal_top"
            />
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#f8f8f8",
                    "borderTopColor": "#dedede",
                    "borderTopWidth": 1,
                    "flexDirection": "row",
                    "height": 45,
                    "justifyContent": "space-between",
                    "paddingHorizontal": 10,
                    "zIndex": 2,
                  },
                  undefined,
                ]
              }
              testID="input_accessory_view"
            >
              <View
                style={
                  Array [
                    Object {
                      "flexDirection": "row",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#a1a1a1",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 11,
                          "transform": Array [
                            Object {
                              "translateY": 4,
                            },
                            Object {
                              "rotate": "-45deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#a1a1a1",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 22,
                          "transform": Array [
                            Object {
                              "translateY": -5,
                            },
                            Object {
                              "rotate": "135deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
              </View>
              <View
                accessible={true}
                focusable={true}
                hitSlop={
                  Object {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="done_button"
              >
                <View
                  testID="needed_for_touchable"
                >
                  <Text
                    allowFontScaling={false}
                    style={
                      Array [
                        Object {
                          "color": "#007aff",
                          "fontSize": 17,
                          "fontWeight": "600",
                          "paddingRight": 11,
                          "paddingTop": 1,
                        },
                        undefined,
                        Object {},
                      ]
                    }
                    testID="done_text"
                  >
                    Done
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#d0d4da",
                    "justifyContent": "center",
                  },
                  Object {
                    "height": 215,
                  },
                  undefined,
                ]
              }
            >
              <View>
                <RNCPicker
                  items={
                    Array [
                      Object {
                        "label": "Select your gender...",
                        "textColor": 4288585892,
                        "value": null,
                      },
                      Object {
                        "label": "Men",
                        "textColor": undefined,
                        "value": "men",
                      },
                      Object {
                        "label": "Women",
                        "textColor": undefined,
                        "value": "women",
                      },
                      Object {
                        "label": "Others",
                        "textColor": undefined,
                        "value": "other",
                      },
                    ]
                  }
                  onChange={[Function]}
                  selectedIndex={0}
                  style={
                    Array [
                      Object {
                        "height": 216,
                      },
                      undefined,
                    ]
                  }
                  testID="ios_picker"
                />
              </View>
            </View>
          </Modal>
        </View>
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignSelf": "flex-start",
          "marginTop": 30,
          "opacity": 1,
        }
      }
    >
      <svg
        data-file-name="SvgGEntryArrowIcon"
      />
    </View>
    <View
      style={
        Object {
          "height": 166.75,
        }
      }
    />
  </View>
</View>
`;

exports[`UserProfileScreen renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#42C86A",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "rgba(62, 185, 99, 0.8)",
          "borderRadius": 250,
          "height": 500,
          "position": "absolute",
          "right": -375,
          "top": 667,
          "width": 500,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.3)",
          "borderRadius": 30,
          "height": 60,
          "left": 10,
          "position": "absolute",
          "top": 30,
          "width": 60,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.3)",
          "borderRadius": 125,
          "height": 250,
          "left": 150,
          "position": "absolute",
          "top": 222.33333333333334,
          "width": 250,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.3)",
          "borderRadius": 300,
          "height": 600,
          "left": 300,
          "position": "absolute",
          "top": -333.5,
          "width": 600,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.3)",
          "borderRadius": 175,
          "height": 350,
          "left": -250,
          "position": "absolute",
          "top": 667,
          "width": 350,
        }
      }
    />
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
        "position": "absolute",
        "right": 30,
        "top": 40,
      }
    }
  >
    <svg
      data-file-name="SvgMenuIcon"
    />
  </View>
  <View
    forwardedRef={[Function]}
    style={
      Object {
        "backgroundColor": "#fff",
        "borderTopLeftRadius": 30,
        "borderTopRightRadius": 30,
        "flex": 4,
        "height": 1133.8999999999999,
        "opacity": 0,
        "paddingHorizontal": 30,
        "paddingVertical": 50,
        "position": "absolute",
        "top": 200.1,
        "transform": Array [
          Object {
            "translateY": 500,
          },
        ],
        "width": 750,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "marginBottom": 133.4,
        }
      }
    >
      <svg
        data-file-name="SvgNurseEllieLogo"
        height={75}
        style={
          Object {
            "flex": 1,
            "marginRight": "5%",
          }
        }
      />
      <Text
        style={
          Object {
            "fontFamily": "roboto-regular",
            "fontSize": 25,
            "paddingRight": 30,
          }
        }
      >
         
        Edit User Profile
      </Text>
    </View>
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      onChangeText={[Function]}
      onSubmitEditing={[Function]}
      placeholder="Full Name"
      rejectResponderTermination={true}
      returnKeyType="done"
      style={
        Object {
          "borderBottomColor": "rgba(112, 112, 112, 0.7)",
          "borderBottomWidth": 1.5,
          "fontSize": 16,
          "paddingTop": 8,
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      onChangeText={[Function]}
      onSubmitEditing={[Function]}
      placeholder="New email"
      rejectResponderTermination={true}
      returnKeyType="done"
      style={
        Object {
          "borderBottomColor": "rgba(112, 112, 112, 0.7)",
          "borderBottomWidth": 1.5,
          "fontSize": 16,
          "paddingTop": 8,
        }
      }
      typep="email"
      underlineColorAndroid="transparent"
      value=""
    />
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 0,
          "paddingVertical": 0,
        }
      }
    >
      <Text
        style={
          Object {
            "alignContent": "flex-start",
            "color": "black",
            "fontSize": 16,
            "paddingLeft": 0,
          }
        }
      >
        Date of Birth:
      </Text>
      <Text
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "color": "#707070",
              "fontFamily": "roboto-regular",
              "fontSize": 14,
            },
            Object {
              "color": "#707070",
            },
          ]
        }
      >
        Select Date
      </Text>
      <View />
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 0,
          "paddingVertical": 0,
        }
      }
    >
      <Text
        style={
          Object {
            "alignContent": "flex-start",
            "color": "black",
            "fontSize": 16,
            "paddingLeft": 0,
          }
        }
      >
        Gender:
      </Text>
      <View
        style={
          Object {
            "paddingRight": 150,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignSelf": "stretch",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="ios_touchable_wrapper"
          >
            <View
              pointerEvents="box-only"
            >
              <TextInput
                allowFontScaling={true}
                editable={false}
                rejectResponderTermination={true}
                style={
                  Array [
                    undefined,
                    Object {
                      "color": "#c7c7cd",
                    },
                  ]
                }
                testID="text_input"
                underlineColorAndroid="transparent"
                value="Select your gender..."
              />
            </View>
          </View>
          <Modal
            hardwareAccelerated={false}
            onOrientationChange={[Function]}
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            testID="ios_modal"
            transparent={true}
            visible={false}
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flex": 1,
                  "opacity": 1,
                }
              }
              testID="ios_modal_top"
            />
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#f8f8f8",
                    "borderTopColor": "#dedede",
                    "borderTopWidth": 1,
                    "flexDirection": "row",
                    "height": 45,
                    "justifyContent": "space-between",
                    "paddingHorizontal": 10,
                    "zIndex": 2,
                  },
                  undefined,
                ]
              }
              testID="input_accessory_view"
            >
              <View
                style={
                  Array [
                    Object {
                      "flexDirection": "row",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#a1a1a1",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 11,
                          "transform": Array [
                            Object {
                              "translateY": 4,
                            },
                            Object {
                              "rotate": "-45deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#a1a1a1",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 22,
                          "transform": Array [
                            Object {
                              "translateY": -5,
                            },
                            Object {
                              "rotate": "135deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
              </View>
              <View
                accessible={true}
                focusable={true}
                hitSlop={
                  Object {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="done_button"
              >
                <View
                  testID="needed_for_touchable"
                >
                  <Text
                    allowFontScaling={false}
                    style={
                      Array [
                        Object {
                          "color": "#007aff",
                          "fontSize": 17,
                          "fontWeight": "600",
                          "paddingRight": 11,
                          "paddingTop": 1,
                        },
                        undefined,
                        Object {},
                      ]
                    }
                    testID="done_text"
                  >
                    Done
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#d0d4da",
                    "justifyContent": "center",
                  },
                  Object {
                    "height": 215,
                  },
                  undefined,
                ]
              }
            >
              <View>
                <RNCPicker
                  items={
                    Array [
                      Object {
                        "label": "Select your gender...",
                        "textColor": 4288585892,
                        "value": null,
                      },
                      Object {
                        "label": "Men",
                        "textColor": undefined,
                        "value": "men",
                      },
                      Object {
                        "label": "Women",
                        "textColor": undefined,
                        "value": "women",
                      },
                      Object {
                        "label": "Others",
                        "textColor": undefined,
                        "value": "other",
                      },
                    ]
                  }
                  onChange={[Function]}
                  selectedIndex={0}
                  style={
                    Array [
                      Object {
                        "height": 216,
                      },
                      undefined,
                    ]
                  }
                  testID="ios_picker"
                />
              </View>
            </View>
          </Modal>
        </View>
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignSelf": "flex-start",
          "marginTop": 30,
          "opacity": 1,
        }
      }
    >
      <svg
        data-file-name="SvgGEntryArrowIcon"
      />
    </View>
    <View
      style={
        Object {
          "height": 166.75,
        }
      }
    />
  </View>
</View>
`;

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#42C86A",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "rgba(62, 185, 99, 0.8)",
          "borderRadius": 250,
          "height": 500,
          "position": "absolute",
          "right": -375,
          "top": 667,
          "width": 500,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.3)",
          "borderRadius": 30,
          "height": 60,
          "left": 10,
          "position": "absolute",
          "top": 30,
          "width": 60,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.3)",
          "borderRadius": 125,
          "height": 250,
          "left": 150,
          "position": "absolute",
          "top": 222.33333333333334,
          "width": 250,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.3)",
          "borderRadius": 300,
          "height": 600,
          "left": 300,
          "position": "absolute",
          "top": -333.5,
          "width": 600,
        }
      }
    />
    <View
      style={
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0.3)",
          "borderRadius": 175,
          "height": 350,
          "left": -250,
          "position": "absolute",
          "top": 667,
          "width": 350,
        }
      }
    />
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
        "position": "absolute",
        "right": 30,
        "top": 40,
      }
    }
  >
    <svg
      data-file-name="SvgMenuIcon"
    />
  </View>
  <View
    forwardedRef={[Function]}
    style={
      Object {
        "backgroundColor": "#fff",
        "borderTopLeftRadius": 30,
        "borderTopRightRadius": 30,
        "flex": 4,
        "height": 1133.8999999999999,
        "opacity": 0,
        "paddingHorizontal": 30,
        "paddingVertical": 50,
        "position": "absolute",
        "top": 200.1,
        "transform": Array [
          Object {
            "translateY": 500,
          },
        ],
        "width": 750,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "marginBottom": 133.4,
        }
      }
    >
      <svg
        data-file-name="SvgNurseEllieLogo"
        height={75}
        style={
          Object {
            "flex": 1,
            "marginRight": "5%",
          }
        }
      />
      <Text
        style={
          Object {
            "fontFamily": "roboto-regular",
            "fontSize": 25,
            "paddingRight": 30,
          }
        }
      >
         
        Edit User Profile
      </Text>
    </View>
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      onChangeText={[Function]}
      onSubmitEditing={[Function]}
      placeholder="Full Name"
      rejectResponderTermination={true}
      returnKeyType="done"
      style={
        Object {
          "borderBottomColor": "rgba(112, 112, 112, 0.7)",
          "borderBottomWidth": 1.5,
          "fontSize": 16,
          "paddingTop": 8,
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      onChangeText={[Function]}
      onSubmitEditing={[Function]}
      placeholder="New email"
      rejectResponderTermination={true}
      returnKeyType="done"
      style={
        Object {
          "borderBottomColor": "rgba(112, 112, 112, 0.7)",
          "borderBottomWidth": 1.5,
          "fontSize": 16,
          "paddingTop": 8,
        }
      }
      typep="email"
      underlineColorAndroid="transparent"
      value=""
    />
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 0,
          "paddingVertical": 0,
        }
      }
    >
      <Text
        style={
          Object {
            "alignContent": "flex-start",
            "color": "black",
            "fontSize": 16,
            "paddingLeft": 0,
          }
        }
      >
        Date of Birth:
      </Text>
      <Text
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "color": "#707070",
              "fontFamily": "roboto-regular",
              "fontSize": 14,
            },
            false,
          ]
        }
      >
        August 21st, 2020
      </Text>
      <View />
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 0,
          "paddingVertical": 0,
        }
      }
    >
      <Text
        style={
          Object {
            "alignContent": "flex-start",
            "color": "black",
            "fontSize": 16,
            "paddingLeft": 0,
          }
        }
      >
        Gender:
      </Text>
      <View
        style={
          Object {
            "paddingRight": 150,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignSelf": "stretch",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="ios_touchable_wrapper"
          >
            <View
              pointerEvents="box-only"
            >
              <TextInput
                allowFontScaling={true}
                editable={false}
                rejectResponderTermination={true}
                style={
                  Array [
                    undefined,
                    Object {
                      "color": "#c7c7cd",
                    },
                  ]
                }
                testID="text_input"
                underlineColorAndroid="transparent"
                value="Select your gender..."
              />
            </View>
          </View>
          <Modal
            hardwareAccelerated={false}
            onOrientationChange={[Function]}
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            testID="ios_modal"
            transparent={true}
            visible={false}
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flex": 1,
                  "opacity": 1,
                }
              }
              testID="ios_modal_top"
            />
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#f8f8f8",
                    "borderTopColor": "#dedede",
                    "borderTopWidth": 1,
                    "flexDirection": "row",
                    "height": 45,
                    "justifyContent": "space-between",
                    "paddingHorizontal": 10,
                    "zIndex": 2,
                  },
                  undefined,
                ]
              }
              testID="input_accessory_view"
            >
              <View
                style={
                  Array [
                    Object {
                      "flexDirection": "row",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#a1a1a1",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 11,
                          "transform": Array [
                            Object {
                              "translateY": 4,
                            },
                            Object {
                              "rotate": "-45deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#a1a1a1",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 22,
                          "transform": Array [
                            Object {
                              "translateY": -5,
                            },
                            Object {
                              "rotate": "135deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
              </View>
              <View
                accessible={true}
                focusable={true}
                hitSlop={
                  Object {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="done_button"
              >
                <View
                  testID="needed_for_touchable"
                >
                  <Text
                    allowFontScaling={false}
                    style={
                      Array [
                        Object {
                          "color": "#007aff",
                          "fontSize": 17,
                          "fontWeight": "600",
                          "paddingRight": 11,
                          "paddingTop": 1,
                        },
                        undefined,
                        Object {},
                      ]
                    }
                    testID="done_text"
                  >
                    Done
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#d0d4da",
                    "justifyContent": "center",
                  },
                  Object {
                    "height": 215,
                  },
                  undefined,
                ]
              }
            >
              <View>
                <RNCPicker
                  items={
                    Array [
                      Object {
                        "label": "Select your gender...",
                        "textColor": 4288585892,
                        "value": null,
                      },
                      Object {
                        "label": "Men",
                        "textColor": undefined,
                        "value": "men",
                      },
                      Object {
                        "label": "Women",
                        "textColor": undefined,
                        "value": "women",
                      },
                      Object {
                        "label": "Others",
                        "textColor": undefined,
                        "value": "other",
                      },
                    ]
                  }
                  onChange={[Function]}
                  selectedIndex={0}
                  style={
                    Array [
                      Object {
                        "height": 216,
                      },
                      undefined,
                    ]
                  }
                  testID="ios_picker"
                />
              </View>
            </View>
          </Modal>
        </View>
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignSelf": "flex-start",
          "marginTop": 30,
          "opacity": 1,
        }
      }
    >
      <svg
        data-file-name="SvgGEntryArrowIcon"
      />
    </View>
    <View
      style={
        Object {
          "height": 166.75,
        }
      }
    />
  </View>
</View>
`;
